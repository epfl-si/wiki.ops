- name: Create Telegram Bot Token Secret
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "telegram-bot-token"
        namespace: "{{ openshift_namespace }}"
      data:
        access_token: "{{ secrets[env].telegram.token | b64encode }}"

- name: Create AlertmanagerConfig
  kubernetes.core.k8s:
    definition:
      apiVersion: monitoring.coreos.com/v1beta1
      kind: AlertmanagerConfig
      metadata:
        name: alertmanager-telegram
        namespace: "{{ openshift_namespace }}"
      spec:
        route:
          receiver: "telegram"
          groupBy: []
          groupWait: 20s
          groupInterval: 5m
          repeatInterval: 2h
          matchers:
            - name: sendto
              value: telegram
              matchType: "="
        receivers:
          - name: "telegram"
            telegramConfigs:
              - botToken:
                  name: telegram-bot-token
                  key: access_token
                chatID: "{{ secrets[env].telegram.chat_id | int }}"
                parseMode: "Markdown"
                message: |
                  {% raw %}
                  {{- if .Alerts -}}
                  {{- $first := index .Alerts 0 -}}
                  {{- if eq $first.Status "firing" -}}
                    {{- if eq $first.Labels.severity "critical" -}}
                  üö® *ALERT CRITICAL* üö®
                    {{- else if eq $first.Labels.severity "warning" -}}
                  ‚ö†Ô∏è *ALERT WARNING* ‚ö†Ô∏è
                    {{- else if eq $first.Labels.severity "info" -}}
                  ‚ÑπÔ∏è *ALERT INFO* ‚ÑπÔ∏è
                    {{- end }}
                  {{- else if eq $first.Status "resolved" -}}
                    {{- if eq $first.Labels.severity "critical" -}}
                  ‚úÖ *RESOLVED CRITICAL* ‚úÖ
                    {{- else if eq $first.Labels.severity "warning" -}}
                  ‚úÖ *RESOLVED WARNING* ‚úÖ
                    {{- else if eq $first.Labels.severity "info" -}}
                  ‚úÖ *RESOLVED INFO* ‚úÖ
                    {{- end }}
                  {{- end }}
                  *Issue detected:* {{ $first.Annotations.summary }}
                  *Application:* {{ $first.Labels.app }}
                  {{- if $first.Labels.pod }}
                  *Pod:* {{ $first.Labels.pod }}
                  {{- end }}
                  *Namespace:* {{ $first.Labels.namespace }}
                  *Details:* {{ $first.Annotations.description }}
                  *Incident started at:* {{ $first.StartsAt.Format "2006-01-02 15:04:05" }} UTC
                  {{- end -}}
                  {% endraw %}
                sendResolved: true
