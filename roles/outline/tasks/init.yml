- name: Create empty API key secrets
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ app.name }}-api-key-{{ item }}"
        namespace: "{{ openshift_namespace }}"
      type: Opaque
      data: {}
  loop:
    - admin
    - monitoring

- name: Create init job role
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: "{{ app.name }}-init-secret-writer"
        namespace: "{{ openshift_namespace }}"
      rules:
        - apiGroups: [""]
          resources: ["secrets"]
          verbs: ["create"]
        - apiGroups: [""]
          resources: ["secrets"]
          resourceNames:
            - "{{ app.name }}-api-key-admin"
            - "{{ app.name }}-api-key-monitoring"
          verbs: ["update", "get"]

- name: Create init job service account
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "{{ app.name }}-init-sa"
        namespace: "{{ openshift_namespace }}"

- name: Bind init role to service account
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: "{{ app.name }}-init-binding"
        namespace: "{{ openshift_namespace }}"
      subjects:
        - kind: ServiceAccount
          name: "{{ app.name }}-init-sa"
          namespace: "{{ openshift_namespace }}"
      roleRef:
        kind: Role
        name: "{{ app.name }}-init-secret-writer"
        apiGroup: rbac.authorization.k8s.io

- name: Check existing init job
  kubernetes.core.k8s_info:
    api_version: batch/v1
    kind: Job
    name: "{{ app.name }}-init-job"
    namespace: "{{ openshift_namespace }}"
  register: init_job_status

- name: Delete existing init job
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "{{ app.name }}-init-job"
        namespace: "{{ openshift_namespace }}"
  when: init_job_status.resources | length > 0

- name: Create initialization job
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "{{ app.name }}-init-job"
        namespace: "{{ openshift_namespace }}"
      spec:
        backoffLimit: "{{ init.backoff_limit }}"
        activeDeadlineSeconds: "{{ init.job_timeout }}"
        template:
          metadata:
            labels:
              app: "{{ app.name }}"
              component: init
          spec:
            containers:
              - name: init
                image: "{{ registry.url }}/{{ registry.organization }}/{{ app.name }}-init:{{ init.image_version }}"
                env:
                  - name: DB_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: "{{ app.name }}-db-credentials"
                        key: password
                  - name: DB_HOST
                    value: "{{ database.host }}"
                  - name: OUTLINE_ADMIN_EMAIL
                    value: "{{ init.admin_email }}"
                  - name: OUTLINE_ADMIN_NAME
                    value: "{{ init.admin_name }}"
                  - name: ADMIN_SECRET_NAME
                    value: "{{ app.name }}-api-key-admin"
                  - name: MONITORING_SECRET_NAME
                    value: "{{ app.name }}-api-key-monitoring"
                resources:
                  requests:
                    cpu: "{{ current_resources.init.requests.cpu }}"
                    memory: "{{ current_resources.init.requests.memory }}"
                  limits:
                    memory: "{{ current_resources.init.limits.memory }}"
            restartPolicy: OnFailure
            serviceAccountName: "{{ app.name }}-init-sa"
            imagePullSecrets:
              - name: "{{ pull_secret_name }}"
