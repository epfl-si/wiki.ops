- name: Create config map for allowed units
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ app }}-allowed-units"
        namespace: "{{ openshift_namespace }}"
      data:
        "allowed-units.json": "{{ allowed_units | to_json }}"

- name: Ensure Sync Secret Exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ app }}-sync"
        namespace: "{{ openshift_namespace }}"
      type: Opaque
      stringData:
        OUTLINE_BASE_URL: "{{ ('https://' ~ subdomain ~ (env == 'test') | ternary('-test', '') ~ '.' ~ domain) }}"
        EPFL_ALLOWED_UNITS_FILE: "/opt/allowed-units.json"
        EPFL_API_URL: "{{ secrets[env].sync.epfl_api_url }}"
        EPFL_API_PASSWORD: "{{ secrets[env].sync.epfl_api_password }}"
        EPFL_API_USERNAME: "{{ secrets[env].sync.epfl_api_username }}"

- name: Create Sync CronJob
  kubernetes.core.k8s:
    definition:
      apiVersion: batch/v1
      kind: CronJob
      metadata:
        name: "{{ app }}-sync-cron"
        namespace: "{{ openshift_namespace }}"
      spec:
        schedule: "30 * * * *"
        concurrencyPolicy: Forbid
        successfulJobsHistoryLimit: 3
        failedJobsHistoryLimit: 1
        jobTemplate:
          spec:
            template:
              spec:
                containers:
                  - name: "{{ app }}-sync"
                    image: "{{ registry }}/{{ organisation }}/{{ app }}-sync:1.6.7"
                    imagePullPolicy: Always
                    envFrom:
                      - secretRef:
                          name: "{{ app }}-sync"
                    env:
                      - name: OUTLINE_API_TOKEN
                        valueFrom:
                          secretKeyRef:
                            name: "{{ app }}-api-key-admin"
                            key: "API_KEY"
                    resources:
                      requests:
                        cpu: 100m
                        memory: 256Mi
                      limits:
                        cpu: 300m
                        memory: 512Mi
                    volumeMounts:
                      - name: allowed-units-volume
                        mountPath: "/opt/allowed-units.json"
                        subPath: "allowed-units.json"
                        readOnly: true
                restartPolicy: OnFailure
                volumes:
                  - name: allowed-units-volume
                    configMap:
                      name: "{{ app }}-allowed-units"
                imagePullSecrets:
                  - name: "{{ pull_secret_name }}"
