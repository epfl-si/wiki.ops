- name: Create allowed units config map
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ app.name }}-allowed-units"
        namespace: "{{ openshift_namespace }}"
      data:
        allowed-units.json: "{{ allowed_units | to_json }}"

- name: Create sync configuration secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ app.name }}-sync"
        namespace: "{{ openshift_namespace }}"
      type: Opaque
      stringData:
        OUTLINE_BASE_URL: "{{ app_url }}"
        OUTLINE_ADMIN_GROUP: "{{ sync.admin_group }}"
        EPFL_ALLOWED_UNITS_FILE: /opt/allowed-units.json
        EPFL_API_URL: "{{ secrets[env].sync.epfl_api_url }}"
        EPFL_API_PASSWORD: "{{ secrets[env].sync.epfl_api_password }}"
        EPFL_API_USERNAME: "{{ secrets[env].sync.epfl_api_username }}"

- name: Create sync cron job
  kubernetes.core.k8s:
    definition:
      apiVersion: batch/v1
      kind: CronJob
      metadata:
        name: "{{ app.name }}-sync-cron"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{ app.name }}"
          component: sync
      spec:
        schedule: "{{ sync.schedule }}"
        concurrencyPolicy: Forbid
        successfulJobsHistoryLimit: 3
        failedJobsHistoryLimit: 1
        jobTemplate:
          spec:
            template:
              metadata:
                labels:
                  app: "{{ app.name }}"
                  component: sync
              spec:
                containers:
                  - name: sync
                    image: "{{ registry.url }}/{{ registry.organization }}/{{ app.name }}-sync:{{ sync.image_version }}"
                    imagePullPolicy: Always
                    envFrom:
                      - secretRef:
                          name: "{{ app.name }}-sync"
                    env:
                      - name: OUTLINE_API_TOKEN
                        valueFrom:
                          secretKeyRef:
                            name: "{{ app.name }}-api-key-admin"
                            key: API_KEY
                    resources:
                      requests:
                        cpu: "{{ current_resources.sync.requests.cpu }}"
                        memory: "{{ current_resources.sync.requests.memory }}"
                      limits:
                        memory: "{{ current_resources.sync.limits.memory }}"
                    volumeMounts:
                      - name: allowed-units-volume
                        mountPath: /opt/allowed-units.json
                        subPath: allowed-units.json
                        readOnly: true
                restartPolicy: OnFailure
                volumes:
                  - name: allowed-units-volume
                    configMap:
                      name: "{{ app.name }}-allowed-units"
                imagePullSecrets:
                  - name: "{{ pull_secret_name }}"
